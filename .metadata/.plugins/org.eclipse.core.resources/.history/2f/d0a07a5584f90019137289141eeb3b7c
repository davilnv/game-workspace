package game;
import java.awt.*;
import java.awt.image.BufferedImage;
import javax.swing.JFrame;

public class Game extends JFrame {

	BufferedImage backBuffer; // ESSE É O NOSSO BUFFER
	public int FPS = 30; // ESSA É A TAXA DE ATUALIZAÇÃO DA TELA
	int janelaW = 500; // LARGURA DA TELA
	int janelaH = 500; // ALTURA DA TELA

	// NO NOSSO METODO ATUALIZAR VAMOS CHAMAR OS METODOS
	// QUE SERÃO EXECUTADOS O TEMPO INTEIRO...
	public void atualizar() {

	}

	// NESSE MÉTODO VAMOS DESENHAR
	// FORMAS GEOMETRICAS, IMAGENS E TEXTOS NA TELA E ETC...
	public void desenharGraficos() {
		Graphics g = getGraphics();// COM g IREMOS DESENHAR O QUE ESTÁ NO BUFFER NA TELA
		Graphics bbg = backBuffer.getGraphics();// COM bbg IREMOS DESENHAR NO NOSSO BUFFER

		// AQUI ESTAMOS DESENHANDO O BUFFER NA TELA,
		// NAS COORDENADAS X:0 e Y:0
		g.drawImage(backBuffer, 0, 0, this);
	}

	// ESSE É O NOSSO MÉTODO INICIALIZAR
	// AQUI VAMOS INICIALIZAR ALGUMAS CONFIGURAÇÃO DO frame E OUTRAS CONFIGURAÇÕES
	public void inicializar() {
		setTitle("Titulo do Jogo!");// SETANDO O TITULO DA JANELA
		setSize(janelaW, janelaH);// DEFINIDO AS DIMENSÕES DA JANELA
		setResizable(false);// TIRANDO A PERMISSÃO DO USUÁRIO REDIMENSIONAR A JANELA
		setDefaultCloseOperation(EXIT_ON_CLOSE);// QUANDO FECHARMOS O frame A APLICAÇÃO PARA DE EXECUTAR
		setLayout(null);// COM ISSO PODEREMOS DEFINIAR COORDENADA E DIMESÕES DE ELMENTOS DE FORMULARIO
						// NO NOSSO FRAME
		setVisible(true);// MUDANDO A VISIBILIDADE DO frame PARA TRUE, ASSIM ELE APARECERÁ
		backBuffer = new BufferedImage(janelaW, janelaH, BufferedImage.TYPE_INT_RGB);// CRIANDO O NOSSO BUFFER DE IMAGEM
	}

}
